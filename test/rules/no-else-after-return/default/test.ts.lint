if (condition) {
    return;
} else {}
  ~~~~ [fail]

if (condition) {
    while (true)
        return;
} else {}
  ~~~~ [fail]

if (condition) {
    while (false)
        return;
} else {}

if (condition) {
    while (condition)
        return;
} else {}

if (condition) return;
else ;
~~~~ [fail]

if (condition) {
    {
        return;
    }
} else {}
  ~~~~ [fail]

if (condition) {
    if (confition) {
        return;
    } else {
      ~~~~ [fail]
        return;
    }
} else {}
  ~~~~ [fail]

if (condition) {
    if (condition) {
        return;
    }
} else {}

if (condition) return;

if (condition) foo();
else bar();

if (condition) {
    return;
}

if (condition) {
    foo();
} else {
    bar();
}

if (condition) {
    {
    }
} else {}

if (condition) {
    if (condition) {
        return;
    } else {
      ~~~~ [fail]
    }
} else {}

if (condition) {
    if (condition) {
    }
} else {}

if (condition) {
    switch (foo) {
        case 'a':
            return;
        case 'b':
            return;
        default:
            return;
    }
} else {}
  ~~~~ [fail]

if (condition) {
    switch (foo) {
        default:
            return;
        case 'a':
            return;
    }
} else {}
  ~~~~ [fail]

if (condition) {
    switch (foo) {
        case 'a':
            return;
        case 'b':
            return;
    }
} else {}

if (condition) {
    switch (foo) {
        case 'a':
            return;
        case 'b':
        default:
            return;
    }
} else {}
  ~~~~ [fail]

if (condition) {
    switch (foo) {
        case 'a':
            return;
        case 'b':
            console.log(foo);
            // fallthrough
        default:
            return;
    }
} else {}
  ~~~~ [fail]

if (condition) {
    switch (foo) {
        case 'a':
            return;
        case 'b':
            return;
        default:
    }
} else {}

if (condition) {
}else if (condition) {
    return;
} else {}

if (condition) {
}else{
    if (condition) {
        return;
    } else {}
      ~~~~ [fail]
}

if (condition) {
    throw null;
} else {}

if (condition) {
    if (condition)
        return;
    else
    ~~~~ [fail]
        return;
} else {}
  ~~~~ [fail]

switch (Boolean()) {
    case true:
        if (condition) {
            if (condition)
                break;
            return;
        } else {}
        break;
    case false:
        if (condition) {
            if (condition)
                return;
            return;
        } else {}
          ~~~~ [fail]
}

outer: for (;;) {
    if (condition) {
        switch (Boolean()) {
            case true:
                break;
        }
        return;
    } else {}
      ~~~~ [fail]

    if (condition) {
        switch (Boolean()) {
            case true:
                break outer;
        }
        return;
    } else {}
}


[fail]: unnecessary else after return
