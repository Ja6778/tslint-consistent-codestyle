function foo(bar) {
    return bar;
}

function foo(bar) {
    if (bar) {
        let baz = bar;
        return baz;
               ~~~  [fail]
    }
}

function foo(bar) {
    let baz = bar;
    if (bar)
        return baz;
}

(baz) => baz;

(baz) => return baz;

(bar) => {
    let baz = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let baz = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let baz = bar, foo = baz;
    return baz;
}

function foo(bar) {
    let baz = bar, foo = ajaff(bar);
    return baz;
}

function foo(bar) {
    let {baz} = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let {baz = 1} = bar;
    return baz;
}

function foo(bar) {
    let {baz = void 0} = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let {foo: baz} = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let {foo: {bar: baz}} = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let [baz] = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let [baz = undefined] = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let [baz = 1] = bar;
    return baz;
}

function foo(bar) {
    let [[baz], bas] = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let [{bar: [baz]}] = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let foo = bar, baz = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let {foo: {baz = undefined}} = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let {foo: {baz = 1}} = bar;
    return baz;
}

function foo(bar) {
    let {foo, [foo]: baz} = bar;
    return baz;
}

function foo(bar) {
    let {foo, [tmp]: baz} = bar;
    return baz;
           ~~~  [fail]
}

function foo(bar) {
    let {foo: {foo}, [foo]: baz} = bar;
    return baz;
}

function foo(bar) {
    let [, ...baz] = bar;
    return baz;
           ~~~ [fail]
}

function foo(bar) {
    let {foo, ...baz} = bar;
    return baz;
}

function foo(bar) {
    let {foo, bas, baz: [ajaff, {moar}]} = bar;
    return baz;
}

class Test {
    foo(bar) {
        let baz = bar;
        return baz;
               ~~~  [fail]
    }

    get baz() {
        let baz = bar;
        return baz;
               ~~~  [fail]
    }
}

function foo() {
    let foo = 1;
    debugger;
    return foo;
}

function foo() {
    let foo = 1;
    return;
}

function foo() {
    let foo = 1;
    return foo + 1;
}

function foo(bar) {
    let {...baz} = bar;
    return baz;
           ~~~ [fail]
}

function foo(bar) {
    let [...baz] = bar;
    return baz;
           ~~~ [fail]
}

function foo(bar) {
    let {[bar()]: baz} = {};
    return baz; // allow this for now
}

function foo(bar) {
    let {['bar']: baz} = bar;
    return baz;
           ~~~ [fail]
}

[fail]: don't declare variable baz to return it immediately